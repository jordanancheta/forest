{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/jordanancheta/Desktop/FOREST/src/components/common/CountryReports.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card, CardHeader, CardBody, CardFooter, Col, Row, FormSelect } from \"shards-react\";\n\nvar CountryReports =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CountryReports, _React$Component);\n\n  function CountryReports(props) {\n    var _this;\n\n    _classCallCheck(this, CountryReports);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CountryReports).call(this, props));\n    _this.mapRef = React.createRef();\n    _this.createGoogleMaps = _this.createGoogleMaps.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.initCountriesMap = _this.initCountriesMap.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(CountryReports, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.createGoogleMaps().then(this.initCountriesMap);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          title = _this$props.title,\n          countries = _this$props.countries;\n      return React.createElement(Card, {\n        small: true,\n        className: \"country-stats\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        className: \"border-bottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        className: \"m-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, title), React.createElement(\"div\", {\n        className: \"block-handle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      })), React.createElement(CardBody, {\n        className: \"p-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        ref: this.mapRef,\n        width: \"100%\",\n        height: \"100%\",\n        style: {\n          width: \"100%\",\n          height: \"180px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(\"table\", {\n        className: \"table m-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, countries.map(function (country, idx) {\n        return React.createElement(\"tr\", {\n          key: idx,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"country-flag mr-1\",\n          src: country.flag,\n          alt: country.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }), country.title), React.createElement(\"td\", {\n          className: \"text-right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, country.visitorsAmount), React.createElement(\"td\", {\n          className: \"text-right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, country.visitorsPercentage));\n      })))), React.createElement(CardFooter, {\n        className: \"border-top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(FormSelect, {\n        size: \"sm\",\n        value: \"last-week\",\n        style: {\n          maxWidth: \"130px\"\n        },\n        onChange: function onChange() {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"last-week\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Last Week\"), React.createElement(\"option\", {\n        value: \"today\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Today\"), React.createElement(\"option\", {\n        value: \"last-month\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Last Month\"), React.createElement(\"option\", {\n        value: \"last-year\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Last Year\"))), React.createElement(Col, {\n        className: \"text-right view-report\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"View full report \\u2192\")))));\n    }\n  }, {\n    key: \"createGoogleMaps\",\n    value: function createGoogleMaps() {\n      if (window.__SDPGoogleChartLoaded__) {\n        return new Promise(function (resolve) {\n          resolve();\n        });\n      }\n\n      window.__SDPGoogleChartLoaded__ = true;\n      return new Promise(function (resolve, reject) {\n        var gmap = document.createElement(\"script\");\n        gmap.src = \"https://www.gstatic.com/charts/loader.js\";\n        gmap.type = \"text/javascript\";\n        gmap.onload = resolve;\n        gmap.onerror = reject;\n        document.body.appendChild(gmap);\n      });\n    }\n  }, {\n    key: \"initCountriesMap\",\n    value: function initCountriesMap() {\n      var _this2 = this;\n\n      /* global google */\n      google.charts.load(\"current\", {\n        packages: [\"geochart\"],\n        mapsApiKey: \"AIzaSyD-9tSrke72PouQMnMX-a7eZSW0jkFMBWY\"\n      });\n      google.charts.setOnLoadCallback(function () {\n        var data = google.visualization.arrayToDataTable(_this2.props.mapsData);\n        var options = {\n          colorAxis: {\n            colors: [\"#B9C2D4\", \"#E4E8EF\"]\n          },\n          legend: false,\n          width: \"100%\"\n        };\n        var chart = new google.visualization.GeoChart(_this2.mapRef.current);\n\n        function drawGeochart() {\n          chart.draw(data, options);\n        }\n\n        drawGeochart();\n        window.addEventListener(\"resize\", drawGeochart);\n      });\n    }\n  }]);\n\n  return CountryReports;\n}(React.Component);\n\nCountryReports.propTypes = {\n  /**\n   * The component's title.\n   */\n  title: PropTypes.string,\n\n  /**\n   * The countries data.\n   */\n  countries: PropTypes.array,\n\n  /**\n   * The map data.\n   */\n  mapsData: PropTypes.array\n};\nCountryReports.defaultProps = {\n  title: \"Users by Country\",\n  countries: [{\n    flag: require(\"../../images/flags/flag-us.png\"),\n    title: \"United States\",\n    visitorsAmount: \"12,291\",\n    visitorsPercentage: \"23.32%\"\n  }, {\n    flag: require(\"../../images/flags/flag-uk.png\"),\n    title: \"United Kingdom\",\n    visitorsAmount: \"11,192\",\n    visitorsPercentage: \"18.8%\"\n  }, {\n    flag: require(\"../../images/flags/flag-au.png\"),\n    title: \"Australia\",\n    visitorsAmount: \"9,291\",\n    visitorsPercentage: \"12.3%\"\n  }, {\n    flag: require(\"../../images/flags/flag-jp.png\"),\n    title: \"Japan\",\n    visitorsAmount: \"2,291\",\n    visitorsPercentage: \"8.14%\"\n  }],\n  mapsData: [[\"Country\", \"Users\"], [\"United States\", 12219], [\"United Kingdom\", 11192], [\"Australia\", 9291], [\"Japan\", 2291]]\n};\nexport default CountryReports;","map":{"version":3,"sources":["/Users/jordanancheta/Desktop/FOREST/src/components/common/CountryReports.js"],"names":["React","PropTypes","Card","CardHeader","CardBody","CardFooter","Col","Row","FormSelect","CountryReports","props","mapRef","createRef","createGoogleMaps","bind","initCountriesMap","then","title","countries","width","height","map","country","idx","flag","visitorsAmount","visitorsPercentage","maxWidth","window","__SDPGoogleChartLoaded__","Promise","resolve","reject","gmap","document","createElement","src","type","onload","onerror","body","appendChild","google","charts","load","packages","mapsApiKey","setOnLoadCallback","data","visualization","arrayToDataTable","mapsData","options","colorAxis","colors","legend","chart","GeoChart","current","drawGeochart","draw","addEventListener","Component","propTypes","string","array","defaultProps","require"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  Col,\n  Row,\n  FormSelect\n} from \"shards-react\";\n\nclass CountryReports extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.mapRef = React.createRef();\n\n    this.createGoogleMaps = this.createGoogleMaps.bind(this);\n    this.initCountriesMap = this.initCountriesMap.bind(this);\n  }\n\n  componentDidMount() {\n    this.createGoogleMaps().then(this.initCountriesMap);\n  }\n\n  render() {\n    const { title, countries } = this.props;\n\n    return (\n      <Card small className=\"country-stats\">\n        <CardHeader className=\"border-bottom\">\n          <h6 className=\"m-0\">{title}</h6>\n          <div className=\"block-handle\" />\n        </CardHeader>\n\n        <CardBody className=\"p-0\">\n          {/* Map Container */}\n          <div\n            ref={this.mapRef}\n            width=\"100%\"\n            height=\"100%\"\n            style={{ width: \"100%\", height: \"180px\" }}\n          />\n\n          {/* Countries Table List */}\n          <table className=\"table m-0\">\n            <tbody>\n              {countries.map((country, idx) => (\n                <tr key={idx}>\n                  <td>\n                    <img\n                      className=\"country-flag mr-1\"\n                      src={country.flag}\n                      alt={country.title}\n                    />\n                    {country.title}\n                  </td>\n                  <td className=\"text-right\">{country.visitorsAmount}</td>\n                  <td className=\"text-right\">{country.visitorsPercentage}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </CardBody>\n\n        <CardFooter className=\"border-top\">\n          <Row>\n            {/* Time Span */}\n            <Col>\n              <FormSelect\n                size=\"sm\"\n                value=\"last-week\"\n                style={{ maxWidth: \"130px\" }}\n                onChange={() => {}}\n              >\n                <option value=\"last-week\">Last Week</option>\n                <option value=\"today\">Today</option>\n                <option value=\"last-month\">Last Month</option>\n                <option value=\"last-year\">Last Year</option>\n              </FormSelect>\n            </Col>\n\n            {/* View Full Report */}\n            <Col className=\"text-right view-report\">\n              {/* eslint-disable-next-line */}\n              <a href=\"#\">View full report &rarr;</a>\n            </Col>\n          </Row>\n        </CardFooter>\n      </Card>\n    );\n  }\n\n  createGoogleMaps() {\n    if (window.__SDPGoogleChartLoaded__) {\n      return new Promise(resolve => {\n        resolve();\n      });\n    }\n\n    window.__SDPGoogleChartLoaded__ = true;\n\n    return new Promise((resolve, reject) => {\n      const gmap = document.createElement(\"script\");\n      gmap.src = \"https://www.gstatic.com/charts/loader.js\";\n      gmap.type = \"text/javascript\";\n      gmap.onload = resolve;\n      gmap.onerror = reject;\n      document.body.appendChild(gmap);\n    });\n  }\n\n  initCountriesMap() {\n    /* global google */\n\n    google.charts.load(\"current\", {\n      packages: [\"geochart\"],\n      mapsApiKey: \"AIzaSyD-9tSrke72PouQMnMX-a7eZSW0jkFMBWY\"\n    });\n\n    google.charts.setOnLoadCallback(() => {\n      const data = google.visualization.arrayToDataTable(this.props.mapsData);\n\n      const options = {\n        colorAxis: {\n          colors: [\"#B9C2D4\", \"#E4E8EF\"]\n        },\n        legend: false,\n        width: \"100%\"\n      };\n\n      const chart = new google.visualization.GeoChart(this.mapRef.current);\n\n      function drawGeochart() {\n        chart.draw(data, options);\n      }\n\n      drawGeochart();\n      window.addEventListener(\"resize\", drawGeochart);\n    });\n  }\n}\n\nCountryReports.propTypes = {\n  /**\n   * The component's title.\n   */\n  title: PropTypes.string,\n  /**\n   * The countries data.\n   */\n  countries: PropTypes.array,\n  /**\n   * The map data.\n   */\n  mapsData: PropTypes.array\n};\n\nCountryReports.defaultProps = {\n  title: \"Users by Country\",\n  countries: [\n    {\n      flag: require(\"../../images/flags/flag-us.png\"),\n      title: \"United States\",\n      visitorsAmount: \"12,291\",\n      visitorsPercentage: \"23.32%\"\n    },\n    {\n      flag: require(\"../../images/flags/flag-uk.png\"),\n      title: \"United Kingdom\",\n      visitorsAmount: \"11,192\",\n      visitorsPercentage: \"18.8%\"\n    },\n    {\n      flag: require(\"../../images/flags/flag-au.png\"),\n      title: \"Australia\",\n      visitorsAmount: \"9,291\",\n      visitorsPercentage: \"12.3%\"\n    },\n    {\n      flag: require(\"../../images/flags/flag-jp.png\"),\n      title: \"Japan\",\n      visitorsAmount: \"2,291\",\n      visitorsPercentage: \"8.14%\"\n    }\n  ],\n  mapsData: [\n    [\"Country\", \"Users\"],\n    [\"United States\", 12219],\n    [\"United Kingdom\", 11192],\n    [\"Australia\", 9291],\n    [\"Japan\", 2291]\n  ]\n};\n\nexport default CountryReports;\n"]},"metadata":{},"sourceType":"module"}