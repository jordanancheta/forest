{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/jordanancheta/Desktop/forest/src/components/layout/MainSidebar/SidebarNavItem.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { NavLink as RouteNavLink } from \"react-router-dom\";\nimport { NavItem, NavLink, DropdownMenu, DropdownItem, Collapse } from \"shards-react\";\nimport { Dispatcher, Constants } from \"../../../flux\";\n\nvar SidebarNavItem =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SidebarNavItem, _React$Component);\n\n  function SidebarNavItem(props) {\n    var _this;\n\n    _classCallCheck(this, SidebarNavItem);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SidebarNavItem).call(this, props));\n    _this.toggleDropdown = _this.toggleDropdown.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(SidebarNavItem, [{\n    key: \"toggleDropdown\",\n    value: function toggleDropdown(item) {\n      Dispatcher.dispatch({\n        actionType: Constants.TOGGLE_SIDEBAR_DROPDOWN,\n        payload: item\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var item = this.props.item;\n      var hasSubItems = item.items && item.items.length;\n      return React.createElement(NavItem, {\n        style: {\n          position: \"relative\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: hasSubItems && \"dropdown-toggle\",\n        tag: hasSubItems ? \"a\" : RouteNavLink,\n        to: hasSubItems ? \"#\" : item.to,\n        onClick: function onClick() {\n          return _this2.toggleDropdown(item);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, item.htmlBefore && React.createElement(\"div\", {\n        className: \"d-inline-block item-icon-wrapper\",\n        dangerouslySetInnerHTML: {\n          __html: item.htmlBefore\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), item.title && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, item.title), item.htmlAfter && React.createElement(\"div\", {\n        className: \"d-inline-block item-icon-wrapper\",\n        dangerouslySetInnerHTML: {\n          __html: item.htmlAfter\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      })), hasSubItems && React.createElement(Collapse, {\n        tag: DropdownMenu,\n        small: true,\n        open: item.open,\n        style: {\n          top: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, item.items.map(function (subItem, idx) {\n        return React.createElement(DropdownItem, {\n          key: idx,\n          tag: RouteNavLink,\n          to: subItem.to,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, subItem.title);\n      })));\n    }\n  }]);\n\n  return SidebarNavItem;\n}(React.Component);\n\nSidebarNavItem.propTypes = {\n  /**\n   * The item object.\n   */\n  item: PropTypes.object\n};\nexport default SidebarNavItem;","map":{"version":3,"sources":["/Users/jordanancheta/Desktop/forest/src/components/layout/MainSidebar/SidebarNavItem.js"],"names":["React","PropTypes","NavLink","RouteNavLink","NavItem","DropdownMenu","DropdownItem","Collapse","Dispatcher","Constants","SidebarNavItem","props","toggleDropdown","bind","item","dispatch","actionType","TOGGLE_SIDEBAR_DROPDOWN","payload","hasSubItems","items","length","position","to","htmlBefore","__html","title","htmlAfter","open","top","map","subItem","idx","Component","propTypes","object"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAO,IAAIC,YAApB,QAAwC,kBAAxC;AACA,SACEC,OADF,EAEEF,OAFF,EAGEG,YAHF,EAIEC,YAJF,EAKEC,QALF,QAMO,cANP;AAOA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,eAAtC;;IAEMC,c;;;;;AACJ,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,wFAAMA,KAAN;AAEA,UAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBC,IAApB,uDAAtB;AAHiB;AAIlB;;;;mCAEcC,I,EAAM;AACnBN,MAAAA,UAAU,CAACO,QAAX,CAAoB;AAClBC,QAAAA,UAAU,EAAEP,SAAS,CAACQ,uBADJ;AAElBC,QAAAA,OAAO,EAAEJ;AAFS,OAApB;AAID;;;6BAEQ;AAAA;;AAAA,UACCA,IADD,GACU,KAAKH,KADf,CACCG,IADD;AAEP,UAAMK,WAAW,GAAGL,IAAI,CAACM,KAAL,IAAcN,IAAI,CAACM,KAAL,CAAWC,MAA7C;AAEA,aACE,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAE;AAAZ,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AACE,QAAA,SAAS,EAAEH,WAAW,IAAI,iBAD5B;AAEE,QAAA,GAAG,EAAEA,WAAW,GAAG,GAAH,GAAShB,YAF3B;AAGE,QAAA,EAAE,EAAEgB,WAAW,GAAG,GAAH,GAASL,IAAI,CAACS,EAH/B;AAIE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACX,cAAL,CAAoBE,IAApB,CAAN;AAAA,SAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMGA,IAAI,CAACU,UAAL,IACC;AACE,QAAA,SAAS,EAAC,kCADZ;AAEE,QAAA,uBAAuB,EAAE;AAAEC,UAAAA,MAAM,EAAEX,IAAI,CAACU;AAAf,SAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,EAYGV,IAAI,CAACY,KAAL,IAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOZ,IAAI,CAACY,KAAZ,CAZjB,EAaGZ,IAAI,CAACa,SAAL,IACC;AACE,QAAA,SAAS,EAAC,kCADZ;AAEE,QAAA,uBAAuB,EAAE;AAAEF,UAAAA,MAAM,EAAEX,IAAI,CAACa;AAAf,SAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdJ,CADF,EAqBGR,WAAW,IACV,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAEd,YAAf;AAA6B,QAAA,KAAK,MAAlC;AAAmC,QAAA,IAAI,EAAES,IAAI,CAACc,IAA9C;AAAoD,QAAA,KAAK,EAAE;AAAEC,UAAAA,GAAG,EAAE;AAAP,SAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGf,IAAI,CAACM,KAAL,CAAWU,GAAX,CAAe,UAACC,OAAD,EAAUC,GAAV;AAAA,eACd,oBAAC,YAAD;AAAc,UAAA,GAAG,EAAEA,GAAnB;AAAwB,UAAA,GAAG,EAAE7B,YAA7B;AAA2C,UAAA,EAAE,EAAE4B,OAAO,CAACR,EAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGQ,OAAO,CAACL,KADX,CADc;AAAA,OAAf,CADH,CAtBJ,CADF;AAiCD;;;;EAnD0B1B,KAAK,CAACiC,S;;AAsDnCvB,cAAc,CAACwB,SAAf,GAA2B;AACzB;;;AAGApB,EAAAA,IAAI,EAAEb,SAAS,CAACkC;AAJS,CAA3B;AAOA,eAAezB,cAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { NavLink as RouteNavLink } from \"react-router-dom\";\nimport {\n  NavItem,\n  NavLink,\n  DropdownMenu,\n  DropdownItem,\n  Collapse\n} from \"shards-react\";\nimport { Dispatcher, Constants } from \"../../../flux\";\n\nclass SidebarNavItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleDropdown = this.toggleDropdown.bind(this);\n  }\n\n  toggleDropdown(item) {\n    Dispatcher.dispatch({\n      actionType: Constants.TOGGLE_SIDEBAR_DROPDOWN,\n      payload: item\n    });\n  }\n\n  render() {\n    const { item } = this.props;\n    const hasSubItems = item.items && item.items.length;\n\n    return (\n      <NavItem style={{ position: \"relative\" }}>\n        <NavLink\n          className={hasSubItems && \"dropdown-toggle\"}\n          tag={hasSubItems ? \"a\" : RouteNavLink}\n          to={hasSubItems ? \"#\" : item.to}\n          onClick={() => this.toggleDropdown(item)}\n        >\n          {item.htmlBefore && (\n            <div\n              className=\"d-inline-block item-icon-wrapper\"\n              dangerouslySetInnerHTML={{ __html: item.htmlBefore }}\n            />\n          )}\n          {item.title && <span>{item.title}</span>}\n          {item.htmlAfter && (\n            <div\n              className=\"d-inline-block item-icon-wrapper\"\n              dangerouslySetInnerHTML={{ __html: item.htmlAfter }}\n            />\n          )}\n        </NavLink>\n        {hasSubItems && (\n          <Collapse tag={DropdownMenu} small open={item.open} style={{ top: 0 }}>\n            {item.items.map((subItem, idx) => (\n              <DropdownItem key={idx} tag={RouteNavLink} to={subItem.to}>\n                {subItem.title}\n              </DropdownItem>\n            ))}\n          </Collapse>\n        )}\n      </NavItem>\n    );\n  }\n}\n\nSidebarNavItem.propTypes = {\n  /**\n   * The item object.\n   */\n  item: PropTypes.object\n};\n\nexport default SidebarNavItem;\n"]},"metadata":{},"sourceType":"module"}