{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/jordanancheta/Desktop/FOREST/src/components/file-manager-cards/DropzoneArea.js\";\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport Dropzone from \"react-dropzone\";\nimport { Row } from \"shards-react\";\n\nvar DropzoneArea =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DropzoneArea, _React$Component);\n\n  function DropzoneArea(props) {\n    var _this;\n\n    _classCallCheck(this, DropzoneArea);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DropzoneArea).call(this, props));\n    _this.handleDrop = _this.handleDrop.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n  /**\n   * Mock method to handle the file(s) drop action.\n   */\n\n\n  _createClass(DropzoneArea, [{\n    key: \"handleDrop\",\n    value: function handleDrop(val) {\n      alert(\"You've dropped \".concat(val.length, \" file\").concat(val.length > 1 ? \"s\" : \"\"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Row, {\n        noGutters: true,\n        className: \"border-bottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"file-manager-cards__dropzone w-100 p-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(Dropzone, {\n        onDrop: this.handleDrop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, function (_ref) {\n        var getRootProps = _ref.getRootProps,\n            getInputProps = _ref.getInputProps,\n            isDragActive = _ref.isDragActive;\n        return React.createElement(\"div\", Object.assign({}, getRootProps(), {\n          className: classNames(\"dropzone\", {\n            \"dropzone--isActive\": isDragActive\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        })), React.createElement(\"p\", {\n          className: \"m-0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, isDragActive ? \"Drop files here...\" : \"Try dropping some files here, or click to select files to upload.\"));\n      })));\n    }\n  }]);\n\n  return DropzoneArea;\n}(React.Component);\n\nexport default DropzoneArea;","map":{"version":3,"sources":["/Users/jordanancheta/Desktop/FOREST/src/components/file-manager-cards/DropzoneArea.js"],"names":["React","classNames","Dropzone","Row","DropzoneArea","props","handleDrop","bind","val","alert","length","getRootProps","getInputProps","isDragActive","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,SAASC,GAAT,QAAoB,cAApB;;IAEMC,Y;;;;;AACJ,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,sFAAMA,KAAN;AAEA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,uDAAlB;AAHiB;AAIlB;AAED;;;;;;;+BAGWC,G,EAAK;AACdC,MAAAA,KAAK,0BAAmBD,GAAG,CAACE,MAAvB,kBAAqCF,GAAG,CAACE,MAAJ,GAAa,CAAb,GAAiB,GAAjB,GAAuB,EAA5D,EAAL;AACD;;;6BAEQ;AACP,aACE,oBAAC,GAAD;AAAK,QAAA,SAAS,MAAd;AAAe,QAAA,SAAS,EAAC,eAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,wCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAE,KAAKJ,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,gBAAmD;AAAA,YAAhDK,YAAgD,QAAhDA,YAAgD;AAAA,YAAlCC,aAAkC,QAAlCA,aAAkC;AAAA,YAAnBC,YAAmB,QAAnBA,YAAmB;AAClD,eACE,6CACMF,YAAY,EADlB;AAEE,UAAA,SAAS,EAAEV,UAAU,CAAC,UAAD,EAAa;AAChC,kCAAsBY;AADU,WAAb,CAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAME,+CAAWD,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WANF,EAOE;AAAG,UAAA,SAAS,EAAC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGC,YAAY,GACT,oBADS,GAET,mEAHN,CAPF,CADF;AAeD,OAjBH,CADF,CADF,CADF;AAyBD;;;;EAxCwBb,KAAK,CAACc,S;;AA2CjC,eAAeV,YAAf","sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\nimport Dropzone from \"react-dropzone\";\nimport { Row } from \"shards-react\";\n\nclass DropzoneArea extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDrop = this.handleDrop.bind(this);\n  }\n\n  /**\n   * Mock method to handle the file(s) drop action.\n   */\n  handleDrop(val) {\n    alert(`You've dropped ${val.length} file${val.length > 1 ? \"s\" : \"\"}`);\n  }\n\n  render() {\n    return (\n      <Row noGutters className=\"border-bottom\">\n        <div className=\"file-manager-cards__dropzone w-100 p-2\">\n          <Dropzone onDrop={this.handleDrop}>\n            {({ getRootProps, getInputProps, isDragActive }) => {\n              return (\n                <div\n                  {...getRootProps()}\n                  className={classNames(\"dropzone\", {\n                    \"dropzone--isActive\": isDragActive\n                  })}\n                >\n                  <input {...getInputProps()} />\n                  <p className=\"m-0\">\n                    {isDragActive\n                      ? \"Drop files here...\"\n                      : \"Try dropping some files here, or click to select files to upload.\"}\n                  </p>\n                </div>\n              );\n            }}\n          </Dropzone>\n        </div>\n      </Row>\n    );\n  }\n}\n\nexport default DropzoneArea;\n"]},"metadata":{},"sourceType":"module"}