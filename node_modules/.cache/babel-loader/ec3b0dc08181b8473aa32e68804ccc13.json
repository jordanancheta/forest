{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jordanancheta/Desktop/FOREST/src/components/user-profile/UserPerformance.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card, CardHeader, CardBody } from \"shards-react\";\nimport Chart from \"../../utils/chart\";\n\nvar UserPerformance =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UserPerformance, _React$Component);\n\n  function UserPerformance(props) {\n    var _this;\n\n    _classCallCheck(this, UserPerformance);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserPerformance).call(this, props));\n    _this.canvasRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(UserPerformance, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var defaultOptions = {\n        responsive: true,\n        scaleBeginsAtZero: true,\n        legend: false,\n        tooltips: {\n          enabled: false,\n          mode: \"index\",\n          position: \"nearest\"\n        },\n        elements: {\n          line: {\n            tension: 0\n          }\n        },\n        scales: {\n          xAxes: [{\n            stacked: true,\n            gridLines: false\n          }],\n          yAxes: [{\n            ticks: {\n              beginAtZero: true\n            }\n          }]\n        }\n      };\n      var chartConfig = {\n        type: \"bar\",\n        data: this.props.chartData,\n        options: _objectSpread({}, defaultOptions, this.props.chartOptions)\n      };\n      new Chart(this.canvasRef.current, chartConfig);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var title = this.props.title;\n      return React.createElement(Card, {\n        small: true,\n        className: \"card-small mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        className: \"border-bottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        className: \"m-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, title), React.createElement(\"div\", {\n        className: \"block-handle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      })), React.createElement(CardBody, {\n        className: \"pt-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"canvas\", {\n        ref: this.canvasRef,\n        height: \"130\",\n        className: \"user-profile-weekly-performance mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return UserPerformance;\n}(React.Component);\n\nUserPerformance.propTypes = {\n  /**\n   * The component's title.\n   */\n  title: PropTypes.string,\n\n  /**\n   * The chart dataset.\n   */\n  chartData: PropTypes.object,\n\n  /**\n   * The Chart.js options.\n   */\n  chartOptions: PropTypes.object\n};\nUserPerformance.defaultProps = {\n  title: \"Weekly Performance Report\",\n  chartData: {\n    labels: [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\n    datasets: [{\n      label: \"Hours\",\n      fill: \"start\",\n      data: [5, 6.4, 7.2, 6, 9, 4.7, 7],\n      backgroundColor: \"rgba(0, 123, 255, 1)\",\n      borderColor: \"rgba(0, 123, 255, 1)\",\n      pointBackgroundColor: \"#FFFFFF\",\n      pointHoverBackgroundColor: \"rgba(0, 123, 255, 1)\",\n      borderWidth: 0\n    }]\n  }\n};\nexport default UserPerformance;","map":{"version":3,"sources":["/Users/jordanancheta/Desktop/FOREST/src/components/user-profile/UserPerformance.js"],"names":["React","PropTypes","Card","CardHeader","CardBody","Chart","UserPerformance","props","canvasRef","createRef","defaultOptions","responsive","scaleBeginsAtZero","legend","tooltips","enabled","mode","position","elements","line","tension","scales","xAxes","stacked","gridLines","yAxes","ticks","beginAtZero","chartConfig","type","data","chartData","options","chartOptions","current","title","Component","propTypes","string","object","defaultProps","labels","datasets","label","fill","backgroundColor","borderColor","pointBackgroundColor","pointHoverBackgroundColor","borderWidth"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card, CardHeader, CardBody } from \"shards-react\";\n\nimport Chart from \"../../utils/chart\";\n\nclass UserPerformance extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const defaultOptions = {\n      responsive: true,\n      scaleBeginsAtZero: true,\n      legend: false,\n      tooltips: {\n        enabled: false,\n        mode: \"index\",\n        position: \"nearest\"\n      },\n      elements: {\n        line: {\n          tension: 0\n        }\n      },\n      scales: {\n        xAxes: [\n          {\n            stacked: true,\n            gridLines: false\n          }\n        ],\n        yAxes: [\n          {\n            ticks: {\n              beginAtZero: true\n            }\n          }\n        ]\n      }\n    };\n\n    const chartConfig = {\n      type: \"bar\",\n      data: this.props.chartData,\n      options: {\n        ...defaultOptions,\n        ...this.props.chartOptions\n      }\n    };\n\n    new Chart(this.canvasRef.current, chartConfig);\n  }\n\n  render() {\n    const { title } = this.props;\n\n    return (\n      <Card small className=\"card-small mb-4\">\n        <CardHeader className=\"border-bottom\">\n          <h6 className=\"m-0\">{title}</h6>\n          <div className=\"block-handle\" />\n        </CardHeader>\n        <CardBody className=\"pt-0\">\n          <canvas\n            ref={this.canvasRef}\n            height=\"130\"\n            className=\"user-profile-weekly-performance mt-3\"\n          />\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nUserPerformance.propTypes = {\n  /**\n   * The component's title.\n   */\n  title: PropTypes.string,\n  /**\n   * The chart dataset.\n   */\n  chartData: PropTypes.object,\n  /**\n   * The Chart.js options.\n   */\n  chartOptions: PropTypes.object\n};\n\nUserPerformance.defaultProps = {\n  title: \"Weekly Performance Report\",\n  chartData: {\n    labels: [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\n    datasets: [\n      {\n        label: \"Hours\",\n        fill: \"start\",\n        data: [5, 6.4, 7.2, 6, 9, 4.7, 7],\n        backgroundColor: \"rgba(0, 123, 255, 1)\",\n        borderColor: \"rgba(0, 123, 255, 1)\",\n        pointBackgroundColor: \"#FFFFFF\",\n        pointHoverBackgroundColor: \"rgba(0, 123, 255, 1)\",\n        borderWidth: 0\n      }\n    ]\n  }\n};\n\nexport default UserPerformance;\n"]},"metadata":{},"sourceType":"module"}