{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jordanancheta/Desktop/forest/src/components/ecommerce/SalesReport.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card, CardHeader, CardBody, Row, Col, ButtonGroup, Button } from \"shards-react\";\nimport RangeDatePicker from \"../common/RangeDatePicker\";\nimport Chart from \"../../utils/chart\";\n\nvar SalesReport =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SalesReport, _React$Component);\n\n  function SalesReport(props) {\n    var _this;\n\n    _classCallCheck(this, SalesReport);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SalesReport).call(this, props));\n    _this.legendRef = React.createRef();\n    _this.canvasRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(SalesReport, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var chartOptions = _objectSpread({}, {\n        legend: false,\n        // Uncomment the next line in order to disable the animations.\n        // animation: false,\n        tooltips: {\n          enabled: false,\n          mode: \"index\",\n          position: \"nearest\"\n        },\n        scales: {\n          xAxes: [{\n            stacked: true,\n            gridLines: false\n          }],\n          yAxes: [{\n            stacked: true,\n            ticks: {\n              userCallback: function userCallback(label) {\n                return label > 999 ? \"\".concat((label / 1000).toFixed(0), \"k\") : label;\n              }\n            }\n          }]\n        }\n      }, this.props.chartOptions);\n\n      var SalesReportChart = new Chart(this.canvasRef.current, {\n        type: \"bar\",\n        data: this.props.chartData,\n        options: chartOptions\n      }); // Generate the chart labels.\n\n      this.legendRef.current.innerHTML = SalesReportChart.generateLegend(); // Hide initially the first and last chart points.\n      // They can still be triggered on hover.\n\n      var meta = SalesReportChart.getDatasetMeta(0);\n      meta.data[0]._model.radius = 0;\n      meta.data[this.props.chartData.datasets[0].data.length - 1]._model.radius = 0; // Render the chart.\n\n      SalesReportChart.render();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var title = this.props.title;\n      return React.createElement(Card, {\n        small: true,\n        className: \"h-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        className: \"border-bottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        className: \"m-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, title), React.createElement(\"div\", {\n        className: \"block-handle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      })), React.createElement(CardBody, {\n        className: \"pt-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"border-bottom py-2 bg-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"6\",\n        className: \"col d-flex mb-2 mb-sm-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(ButtonGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(Button, {\n        theme: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Hour\"), React.createElement(Button, {\n        theme: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Day\"), React.createElement(Button, {\n        theme: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Week\"), React.createElement(Button, {\n        theme: \"white\",\n        active: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Month\"))), React.createElement(Col, {\n        sm: \"6\",\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(RangeDatePicker, {\n        className: \"justify-content-end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        ref: this.legendRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), React.createElement(\"canvas\", {\n        height: \"120\",\n        ref: this.canvasRef,\n        style: {\n          maxWidth: \"100% !important\"\n        },\n        className: \"sales-overview-sales-report\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return SalesReport;\n}(React.Component);\n\nSalesReport.propTypes = {\n  /**\n   * The title of the component.\n   */\n  title: PropTypes.string,\n\n  /**\n   * The chart data.\n   */\n  chartData: PropTypes.object,\n\n  /**\n   * The Chart.js options.\n   */\n  chartOptions: PropTypes.object\n};\nSalesReport.defaultProps = {\n  title: \"Sales Report\",\n  chartData: {\n    labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Nov\", \"Dec\"],\n    datasets: [{\n      label: \"Profit\",\n      fill: \"start\",\n      data: [28922, 25317, 23182, 32119, 11291, 8199, 25182, 22120, 10219, 8771, 12992, 8221],\n      backgroundColor: \"rgba(0, 123, 255, 1)\",\n      borderColor: \"rgba(0, 123, 255, 1)\",\n      pointBackgroundColor: \"#FFFFFF\",\n      pointHoverBackgroundColor: \"rgba(0, 123, 255, 1)\",\n      borderWidth: 1.5\n    }, {\n      label: \"Shipping\",\n      fill: \"start\",\n      data: [2892, 2531, 2318, 3211, 1129, 819, 2518, 2212, 1021, 8771, 1299, 820],\n      backgroundColor: \"rgba(72, 160, 255, 1)\",\n      borderColor: \"rgba(72, 160, 255, 1)\",\n      pointBackgroundColor: \"#FFFFFF\",\n      pointHoverBackgroundColor: \"rgba(0, 123, 255, 1)\",\n      borderWidth: 1.5\n    }, {\n      label: \"Tax\",\n      fill: \"start\",\n      data: [1400, 1250, 1150, 1600, 500, 400, 1250, 1100, 500, 4000, 600, 500],\n      backgroundColor: \"rgba(153, 202, 255, 1)\",\n      borderColor: \"rgba(153, 202, 255, 1)\",\n      pointBackgroundColor: \"#FFFFFF\",\n      pointHoverBackgroundColor: \"rgba(0, 123, 255, 1)\",\n      borderWidth: 1.5\n    }]\n  }\n};\nexport default SalesReport;","map":{"version":3,"sources":["/Users/jordanancheta/Desktop/forest/src/components/ecommerce/SalesReport.js"],"names":["React","PropTypes","Card","CardHeader","CardBody","Row","Col","ButtonGroup","Button","RangeDatePicker","Chart","SalesReport","props","legendRef","createRef","canvasRef","chartOptions","legend","tooltips","enabled","mode","position","scales","xAxes","stacked","gridLines","yAxes","ticks","userCallback","label","toFixed","SalesReportChart","current","type","data","chartData","options","innerHTML","generateLegend","meta","getDatasetMeta","_model","radius","datasets","length","render","title","maxWidth","Component","propTypes","string","object","defaultProps","labels","fill","backgroundColor","borderColor","pointBackgroundColor","pointHoverBackgroundColor","borderWidth"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Row,\n  Col,\n  ButtonGroup,\n  Button\n} from \"shards-react\";\n\nimport RangeDatePicker from \"../common/RangeDatePicker\";\nimport Chart from \"../../utils/chart\";\n\nclass SalesReport extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.legendRef = React.createRef();\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const chartOptions = {\n      ...{\n        legend: false,\n        // Uncomment the next line in order to disable the animations.\n        // animation: false,\n        tooltips: {\n          enabled: false,\n          mode: \"index\",\n          position: \"nearest\"\n        },\n        scales: {\n          xAxes: [\n            {\n              stacked: true,\n              gridLines: false\n            }\n          ],\n          yAxes: [\n            {\n              stacked: true,\n              ticks: {\n                userCallback(label) {\n                  return label > 999 ? `${(label / 1000).toFixed(0)}k` : label;\n                }\n              }\n            }\n          ]\n        }\n      },\n      ...this.props.chartOptions\n    };\n\n    const SalesReportChart = new Chart(this.canvasRef.current, {\n      type: \"bar\",\n      data: this.props.chartData,\n      options: chartOptions\n    });\n\n    // Generate the chart labels.\n    this.legendRef.current.innerHTML = SalesReportChart.generateLegend();\n\n    // Hide initially the first and last chart points.\n    // They can still be triggered on hover.\n    const meta = SalesReportChart.getDatasetMeta(0);\n    meta.data[0]._model.radius = 0;\n    meta.data[\n      this.props.chartData.datasets[0].data.length - 1\n    ]._model.radius = 0;\n\n    // Render the chart.\n    SalesReportChart.render();\n  }\n\n  render() {\n    const { title } = this.props;\n\n    return (\n      <Card small className=\"h-100\">\n        <CardHeader className=\"border-bottom\">\n          <h6 className=\"m-0\">{title}</h6>\n          <div className=\"block-handle\" />\n        </CardHeader>\n\n        <CardBody className=\"pt-0\">\n          <Row className=\"border-bottom py-2 bg-light\">\n            {/* Time Interval */}\n            <Col sm=\"6\" className=\"col d-flex mb-2 mb-sm-0\">\n              <ButtonGroup>\n                <Button theme=\"white\">Hour</Button>\n                <Button theme=\"white\">Day</Button>\n                <Button theme=\"white\">Week</Button>\n                <Button theme=\"white\" active>\n                  Month\n                </Button>\n              </ButtonGroup>\n            </Col>\n\n            {/* DatePicker */}\n            <Col sm=\"6\" className=\"col\">\n              <RangeDatePicker className=\"justify-content-end\" />\n            </Col>\n          </Row>\n          <div ref={this.legendRef} />\n          <canvas\n            height=\"120\"\n            ref={this.canvasRef}\n            style={{ maxWidth: \"100% !important\" }}\n            className=\"sales-overview-sales-report\"\n          />\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nSalesReport.propTypes = {\n  /**\n   * The title of the component.\n   */\n  title: PropTypes.string,\n  /**\n   * The chart data.\n   */\n  chartData: PropTypes.object,\n  /**\n   * The Chart.js options.\n   */\n  chartOptions: PropTypes.object\n};\n\nSalesReport.defaultProps = {\n  title: \"Sales Report\",\n  chartData: {\n    labels: [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Nov\",\n      \"Dec\"\n    ],\n    datasets: [\n      {\n        label: \"Profit\",\n        fill: \"start\",\n        data: [\n          28922,\n          25317,\n          23182,\n          32119,\n          11291,\n          8199,\n          25182,\n          22120,\n          10219,\n          8771,\n          12992,\n          8221\n        ],\n        backgroundColor: \"rgba(0, 123, 255, 1)\",\n        borderColor: \"rgba(0, 123, 255, 1)\",\n        pointBackgroundColor: \"#FFFFFF\",\n        pointHoverBackgroundColor: \"rgba(0, 123, 255, 1)\",\n        borderWidth: 1.5\n      },\n      {\n        label: \"Shipping\",\n        fill: \"start\",\n        data: [\n          2892,\n          2531,\n          2318,\n          3211,\n          1129,\n          819,\n          2518,\n          2212,\n          1021,\n          8771,\n          1299,\n          820\n        ],\n        backgroundColor: \"rgba(72, 160, 255, 1)\",\n        borderColor: \"rgba(72, 160, 255, 1)\",\n        pointBackgroundColor: \"#FFFFFF\",\n        pointHoverBackgroundColor: \"rgba(0, 123, 255, 1)\",\n        borderWidth: 1.5\n      },\n      {\n        label: \"Tax\",\n        fill: \"start\",\n        data: [\n          1400,\n          1250,\n          1150,\n          1600,\n          500,\n          400,\n          1250,\n          1100,\n          500,\n          4000,\n          600,\n          500\n        ],\n        backgroundColor: \"rgba(153, 202, 255, 1)\",\n        borderColor: \"rgba(153, 202, 255, 1)\",\n        pointBackgroundColor: \"#FFFFFF\",\n        pointHoverBackgroundColor: \"rgba(0, 123, 255, 1)\",\n        borderWidth: 1.5\n      }\n    ]\n  }\n};\n\nexport default SalesReport;\n"]},"metadata":{},"sourceType":"module"}