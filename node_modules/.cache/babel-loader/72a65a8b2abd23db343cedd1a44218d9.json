{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport { EventEmitter } from \"events\";\nimport Dispatcher from \"./dispatcher\";\nimport Constants from \"./constants\";\nimport getSidebarNavItems from \"../data/sidebar-nav-items\";\nvar _store = {\n  menuVisible: false,\n  navItems: getSidebarNavItems()\n};\n\nvar Store =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inherits(Store, _EventEmitter);\n\n  function Store() {\n    var _this;\n\n    _classCallCheck(this, Store);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Store).call(this));\n    _this.registerToActions = _this.registerToActions.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggleSidebar = _this.toggleSidebar.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggleSidebarDropdown = _this.toggleSidebarDropdown.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    Dispatcher.register(_this.registerToActions.bind(_assertThisInitialized(_assertThisInitialized(_this))));\n    return _this;\n  }\n\n  _createClass(Store, [{\n    key: \"registerToActions\",\n    value: function registerToActions(_ref) {\n      var actionType = _ref.actionType,\n          payload = _ref.payload;\n\n      switch (actionType) {\n        case Constants.TOGGLE_SIDEBAR:\n          this.toggleSidebar();\n          break;\n\n        case Constants.TOGGLE_SIDEBAR_DROPDOWN:\n          this.toggleSidebarDropdown(payload);\n          break;\n\n        default:\n      }\n    }\n  }, {\n    key: \"toggleSidebar\",\n    value: function toggleSidebar() {\n      _store.menuVisible = !_store.menuVisible;\n      this.emit(Constants.CHANGE);\n    }\n  }, {\n    key: \"toggleSidebarDropdown\",\n    value: function toggleSidebarDropdown(item) {\n      var newStore = _objectSpread({}, _store);\n\n      var navGroupIdx = null;\n      var navItemIdx = null;\n      newStore.navItems.forEach(function (navItem, _idx) {\n        var __idx = navItem.items.indexOf(item);\n\n        if (__idx !== -1) {\n          navGroupIdx = _idx;\n          navItemIdx = __idx;\n        }\n      });\n      newStore.navItems[navGroupIdx].items[navItemIdx].open = !newStore.navItems[navGroupIdx].items[navItemIdx].open;\n      newStore.navItems = newStore.navItems.map(function (i) {\n        i.items = i.items.map(function (_i, idx) {\n          if (idx !== navItemIdx) {\n            _i.open = false;\n          }\n\n          return _i;\n        });\n        return i;\n      });\n      _store = newStore;\n      this.emit(Constants.CHANGE);\n    }\n  }, {\n    key: \"getMenuState\",\n    value: function getMenuState() {\n      return _store.menuVisible;\n    }\n  }, {\n    key: \"getSidebarItems\",\n    value: function getSidebarItems() {\n      return _store.navItems;\n    }\n  }, {\n    key: \"addChangeListener\",\n    value: function addChangeListener(callback) {\n      this.on(Constants.CHANGE, callback);\n    }\n  }, {\n    key: \"removeChangeListener\",\n    value: function removeChangeListener(callback) {\n      this.removeListener(Constants.CHANGE, callback);\n    }\n  }]);\n\n  return Store;\n}(EventEmitter);\n\nexport default new Store();","map":{"version":3,"sources":["/Users/jordanancheta/Desktop/forest/src/flux/store.js"],"names":["EventEmitter","Dispatcher","Constants","getSidebarNavItems","_store","menuVisible","navItems","Store","registerToActions","bind","toggleSidebar","toggleSidebarDropdown","register","actionType","payload","TOGGLE_SIDEBAR","TOGGLE_SIDEBAR_DROPDOWN","emit","CHANGE","item","newStore","navGroupIdx","navItemIdx","forEach","navItem","_idx","__idx","items","indexOf","open","map","i","_i","idx","callback","on","removeListener"],"mappings":"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","sourcesContent":["import { EventEmitter } from \"events\";\n\nimport Dispatcher from \"./dispatcher\";\nimport Constants from \"./constants\";\nimport getSidebarNavItems from \"../data/sidebar-nav-items\";\n\nlet _store = {\n  menuVisible: false,\n  navItems: getSidebarNavItems()\n};\n\nclass Store extends EventEmitter {\n  constructor() {\n    super();\n\n    this.registerToActions = this.registerToActions.bind(this);\n    this.toggleSidebar = this.toggleSidebar.bind(this);\n    this.toggleSidebarDropdown = this.toggleSidebarDropdown.bind(this);\n\n    Dispatcher.register(this.registerToActions.bind(this));\n  }\n\n  registerToActions({ actionType, payload }) {\n    switch (actionType) {\n      case Constants.TOGGLE_SIDEBAR:\n        this.toggleSidebar();\n        break;\n      case Constants.TOGGLE_SIDEBAR_DROPDOWN:\n        this.toggleSidebarDropdown(payload);\n        break;\n      default:\n    }\n  }\n\n  toggleSidebar() {\n    _store.menuVisible = !_store.menuVisible;\n    this.emit(Constants.CHANGE);\n  }\n\n  toggleSidebarDropdown(item) {\n    const newStore = { ..._store };\n\n    let navGroupIdx = null;\n    let navItemIdx = null;\n\n    newStore.navItems.forEach((navItem, _idx) => {\n      const __idx = navItem.items.indexOf(item);\n      if (__idx !== -1) {\n        navGroupIdx = _idx;\n        navItemIdx = __idx;\n      }\n    });\n\n    newStore.navItems[navGroupIdx].items[navItemIdx].open = !newStore.navItems[\n      navGroupIdx\n    ].items[navItemIdx].open;\n\n    newStore.navItems = newStore.navItems.map(i => {\n      i.items = i.items.map((_i, idx) => {\n        if (idx !== navItemIdx) {\n          _i.open = false;\n        }\n        return _i;\n      });\n      return i;\n    });\n\n    _store = newStore;\n    this.emit(Constants.CHANGE);\n  }\n\n  getMenuState() {\n    return _store.menuVisible;\n  }\n\n  getSidebarItems() {\n    return _store.navItems;\n  }\n\n  addChangeListener(callback) {\n    this.on(Constants.CHANGE, callback);\n  }\n\n  removeChangeListener(callback) {\n    this.removeListener(Constants.CHANGE, callback);\n  }\n}\n\nexport default new Store();\n"]},"metadata":{},"sourceType":"module"}