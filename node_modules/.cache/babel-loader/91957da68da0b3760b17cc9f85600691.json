{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/jordanancheta/Desktop/forest/src/components/file-manager-list/FileDropzone.js\";\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport Dropzone from \"react-dropzone\";\n\nvar FileDropzone =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FileDropzone, _React$Component);\n\n  function FileDropzone(props) {\n    var _this;\n\n    _classCallCheck(this, FileDropzone);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FileDropzone).call(this, props));\n    _this.handleFileDrop = _this.handleFileDrop.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n  /**\n   * Mock method to handle the file drop.\n   */\n\n\n  _createClass(FileDropzone, [{\n    key: \"handleFileDrop\",\n    value: function handleFileDrop(val) {\n      alert(\"You've dropped \".concat(val.length, \" file\").concat(val.length > 1 ? \"s\" : \"\"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"file-manager__dropzone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(Dropzone, {\n        onDrop: this.handleFileDrop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, function (_ref) {\n        var getRootProps = _ref.getRootProps,\n            getInputProps = _ref.getInputProps,\n            isDragActive = _ref.isDragActive;\n        return React.createElement(\"div\", Object.assign({}, getRootProps(), {\n          className: classNames(\"dropzone\", {\n            \"dropzone--isActive\": isDragActive\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        })), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, isDragActive ? \"Drop files here!\" : \"Drop files here to upload\"));\n      }));\n    }\n  }]);\n\n  return FileDropzone;\n}(React.Component);\n\nexport default FileDropzone;","map":{"version":3,"sources":["/Users/jordanancheta/Desktop/forest/src/components/file-manager-list/FileDropzone.js"],"names":["React","classNames","Dropzone","FileDropzone","props","handleFileDrop","bind","val","alert","length","getRootProps","getInputProps","isDragActive","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,QAAP,MAAqB,gBAArB;;IAEMC,Y;;;;;AACJ,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,sFAAMA,KAAN;AAEA,UAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBC,IAApB,uDAAtB;AAHiB;AAIlB;AAED;;;;;;;mCAGeC,G,EAAK;AAClBC,MAAAA,KAAK,0BAAmBD,GAAG,CAACE,MAAvB,kBAAqCF,GAAG,CAACE,MAAJ,GAAa,CAAb,GAAiB,GAAjB,GAAuB,EAA5D,EAAL;AACD;;;6BAEQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAE,KAAKJ,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,gBAAmD;AAAA,YAAhDK,YAAgD,QAAhDA,YAAgD;AAAA,YAAlCC,aAAkC,QAAlCA,aAAkC;AAAA,YAAnBC,YAAmB,QAAnBA,YAAmB;AAClD,eACE,6CACMF,YAAY,EADlB;AAEE,UAAA,SAAS,EAAET,UAAU,CAAC,UAAD,EAAa;AAChC,kCAAsBW;AADU,WAAb,CAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAME,+CAAWD,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGC,YAAY,GACT,kBADS,GAET,2BAHN,CAPF,CADF;AAeD,OAjBH,CADF,CADF;AAuBD;;;;EAtCwBZ,KAAK,CAACa,S;;AAyCjC,eAAeV,YAAf","sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\nimport Dropzone from \"react-dropzone\";\n\nclass FileDropzone extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleFileDrop = this.handleFileDrop.bind(this);\n  }\n\n  /**\n   * Mock method to handle the file drop.\n   */\n  handleFileDrop(val) {\n    alert(`You've dropped ${val.length} file${val.length > 1 ? \"s\" : \"\"}`);\n  }\n\n  render() {\n    return (\n      <div className=\"file-manager__dropzone\">\n        <Dropzone onDrop={this.handleFileDrop}>\n          {({ getRootProps, getInputProps, isDragActive }) => {\n            return (\n              <div\n                {...getRootProps()}\n                className={classNames(\"dropzone\", {\n                  \"dropzone--isActive\": isDragActive\n                })}\n              >\n                <input {...getInputProps()} />\n                <span>\n                  {isDragActive\n                    ? \"Drop files here!\"\n                    : \"Drop files here to upload\"}\n                </span>\n              </div>\n            );\n          }}\n        </Dropzone>\n      </div>\n    );\n  }\n}\n\nexport default FileDropzone;\n"]},"metadata":{},"sourceType":"module"}