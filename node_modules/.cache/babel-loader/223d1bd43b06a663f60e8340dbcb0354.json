{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/jordanancheta/Desktop/FOREST/src/components/file-manager-cards/DirectoriesList.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { Row, Col, Card, CardFooter } from \"shards-react\";\n\nvar DirectoriesList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DirectoriesList, _React$Component);\n\n  function DirectoriesList(props) {\n    var _this;\n\n    _classCallCheck(this, DirectoriesList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DirectoriesList).call(this, props));\n    _this.state = _objectSpread({}, props);\n    _this.handleDirectoryClick = _this.handleDirectoryClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n  /**\n   * Changes the selected state for a specific (clicked) directory.\n   */\n\n\n  _createClass(DirectoriesList, [{\n    key: \"handleDirectoryClick\",\n    value: function handleDirectoryClick(dir) {\n      var newState = _objectSpread({}, this.state);\n\n      this.setState(_objectSpread({}, newState.directories[newState.directories.indexOf(dir)] = _objectSpread({}, dir, {\n        selected: !dir.selected\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var directories = this.state.directories;\n      return React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, directories.map(function (dir, idx) {\n        var classes = classNames(dir.selected && \"file-manager__item--selected\", \"file-manager__item\", \"file-manager__item--directory\", \"mb-3\");\n        return React.createElement(Col, {\n          lg: \"3\",\n          key: idx,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, React.createElement(Card, {\n          onClick: function onClick() {\n            return _this2.handleDirectoryClick(dir);\n          },\n          small: true,\n          className: classes,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, React.createElement(CardFooter, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"file-manager__item-icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"material-icons\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, \"\\uE2C7\"), \" \"), React.createElement(\"h6\", {\n          className: \"file-manager__item-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, dir.title))));\n      }));\n    }\n  }]);\n\n  return DirectoriesList;\n}(React.Component);\n\nDirectoriesList.propTypes = {\n  /**\n   * The directories array.\n   */\n  directories: PropTypes.array\n};\nDirectoriesList.defaultProps = {\n  directories: [{\n    id: 1,\n    title: \"Projects\",\n    selected: true\n  }, {\n    id: 2,\n    title: \"Movies\",\n    selected: false\n  }, {\n    id: 3,\n    title: \"Backups\",\n    selected: false\n  }, {\n    id: 4,\n    title: \"Photos\",\n    selected: false\n  }, {\n    id: 5,\n    title: \"Old Files\",\n    selected: false\n  }, {\n    id: 6,\n    title: \"New Folder with Extremely Long Title\",\n    selected: false\n  }]\n};\nexport default DirectoriesList;","map":{"version":3,"sources":["/Users/jordanancheta/Desktop/FOREST/src/components/file-manager-cards/DirectoriesList.js"],"names":["React","PropTypes","classNames","Row","Col","Card","CardFooter","DirectoriesList","props","state","handleDirectoryClick","bind","dir","newState","setState","directories","indexOf","selected","map","idx","classes","title","Component","propTypes","array","defaultProps","id"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { Row, Col, Card, CardFooter } from \"shards-react\";\n\nclass DirectoriesList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ...props\n    };\n\n    this.handleDirectoryClick = this.handleDirectoryClick.bind(this);\n  }\n\n  /**\n   * Changes the selected state for a specific (clicked) directory.\n   */\n  handleDirectoryClick(dir) {\n    const newState = { ...this.state };\n    this.setState({\n      ...(newState.directories[newState.directories.indexOf(dir)] = {\n        ...dir,\n        selected: !dir.selected\n      })\n    });\n  }\n\n  render() {\n    const { directories } = this.state;\n    return (\n      <Row>\n        {directories.map((dir, idx) => {\n          const classes = classNames(\n            dir.selected && \"file-manager__item--selected\",\n            \"file-manager__item\",\n            \"file-manager__item--directory\",\n            \"mb-3\"\n          );\n\n          return (\n            <Col lg=\"3\" key={idx}>\n              <Card\n                onClick={() => this.handleDirectoryClick(dir)}\n                small\n                className={classes}\n              >\n                <CardFooter>\n                  <span className=\"file-manager__item-icon\">\n                    <i className=\"material-icons\">&#xE2C7;</i>{\" \"}\n                  </span>\n                  <h6 className=\"file-manager__item-title\">{dir.title}</h6>\n                </CardFooter>\n              </Card>\n            </Col>\n          );\n        })}\n      </Row>\n    );\n  }\n}\nDirectoriesList.propTypes = {\n  /**\n   * The directories array.\n   */\n  directories: PropTypes.array\n};\n\nDirectoriesList.defaultProps = {\n  directories: [\n    {\n      id: 1,\n      title: \"Projects\",\n      selected: true\n    },\n    {\n      id: 2,\n      title: \"Movies\",\n      selected: false\n    },\n    {\n      id: 3,\n      title: \"Backups\",\n      selected: false\n    },\n    {\n      id: 4,\n      title: \"Photos\",\n      selected: false\n    },\n    {\n      id: 5,\n      title: \"Old Files\",\n      selected: false\n    },\n    {\n      id: 6,\n      title: \"New Folder with Extremely Long Title\",\n      selected: false\n    }\n  ]\n};\n\nexport default DirectoriesList;\n"]},"metadata":{},"sourceType":"module"}