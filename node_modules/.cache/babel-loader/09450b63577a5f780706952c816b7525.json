{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _constants = require(\"./utils/constants\");\n\nvar Toolbar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inheritsLoose2.default)(Toolbar, _React$Component);\n\n  function Toolbar() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _this.navigate = function (action) {\n      _this.props.onNavigate(action);\n    };\n\n    _this.view = function (view) {\n      _this.props.onView(view);\n    };\n\n    return _this;\n  }\n\n  var _proto = Toolbar.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        messages = _this$props.localizer.messages,\n        label = _this$props.label;\n    return _react.default.createElement(\"div\", {\n      className: \"rbc-toolbar\"\n    }, _react.default.createElement(\"span\", {\n      className: \"rbc-btn-group\"\n    }, _react.default.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.navigate.bind(null, _constants.navigate.TODAY)\n    }, messages.today), _react.default.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.navigate.bind(null, _constants.navigate.PREVIOUS)\n    }, messages.previous), _react.default.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.navigate.bind(null, _constants.navigate.NEXT)\n    }, messages.next)), _react.default.createElement(\"span\", {\n      className: \"rbc-toolbar-label\"\n    }, label), _react.default.createElement(\"span\", {\n      className: \"rbc-btn-group\"\n    }, this.viewNamesGroup(messages)));\n  };\n\n  _proto.viewNamesGroup = function viewNamesGroup(messages) {\n    var _this2 = this;\n\n    var viewNames = this.props.views;\n    var view = this.props.view;\n\n    if (viewNames.length > 1) {\n      return viewNames.map(function (name) {\n        return _react.default.createElement(\"button\", {\n          type: \"button\",\n          key: name,\n          className: (0, _classnames.default)({\n            'rbc-active': view === name\n          }),\n          onClick: _this2.view.bind(null, name)\n        }, messages[name]);\n      });\n    }\n  };\n\n  return Toolbar;\n}(_react.default.Component);\n\nToolbar.propTypes = {\n  view: _propTypes.default.string.isRequired,\n  views: _propTypes.default.arrayOf(_propTypes.default.string).isRequired,\n  label: _propTypes.default.node.isRequired,\n  localizer: _propTypes.default.object,\n  onNavigate: _propTypes.default.func.isRequired,\n  onView: _propTypes.default.func.isRequired\n};\nvar _default = Toolbar;\nexports.default = _default;\nmodule.exports = exports[\"default\"];","map":null,"metadata":{},"sourceType":"script"}